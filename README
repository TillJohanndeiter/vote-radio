GIT checkout:
git clone https://se.techfak.de/git/g-se-tut-ws-2019.project-template.git

## Welcome to VoteRadio

## Why i made this

Last semester i work as a tutor at my university. The students had to program with java and and libraries (VlcJ, Jackson, NanotHttp, JavaFx,...) a desktop app similar to festify https://festify.rocks/. For prepreation of my tutorial i made the project.

During the development process i learned many new things about programming and software development beyond how to explain newbies the basics and motivate others to improve their coding skills. Not only how to desing a rest api with connection to a model, but how to set up a ci pipline with your own docker container also use patterns like strategy or template in real projects.

## User Manual

**VoteRadio requires a correct installation of VLC independently if you use it as server, client or offline.**
You can download the supported version here: https://www.videolan.org/.

### Terminal Mode / Randomplay

If you just want to enjoy music and don't care about order, voting and graphical user interfaces you can start the VoteRadio without any arguments except an optional path of .mp3 files which is used for playlist creation. If their is no path specified the current folder will be used as default path. Please remember that voteRadio requires a folder with at least one mp3 file. Otherwise it can't start.

./gseRadio optionalFolder

### JukeBox / Offline voting

To use the voting mode with GUI you add -g or --gui argument. Likewise in terminal mode you can add a optional folder. If you want so start or stop music you can use the button. Also you can increase or decrease music volumen in by using the control panel. Also their is the option to set the minimal plays before a song can be replayed.


./gseRadio musicFolder -g optionalFolder
./gseRadio musicFolder --gui optionalFolder

### Client

--client

Same as jukebox mode, but you can connect to another pc who run server mode. You have to enter Ip and the port

### Server

--server --streamPort=5050 --streamAddress=239.255.0.1 --restPort=8080 --replays=5 music


Will start a rest and socket deamon server with similar commands as terminal mode. You can choose the port and addres of the rtp stream and port of the rest server but also the minimum of plays before replay and optional a filepath
